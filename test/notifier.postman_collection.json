{
	"info": {
		"name": "notifier",
		"_postman_id": "7bb45324-dc1a-6708-361a-062d6bc11311",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"token found\"] = jsonData.data.token;",
							"postman.setEnvironmentVariable(\"token\", jsonData.data.token);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\":\"{{auth_user}}\",\n  \"password\":\"{{auth_passwd}}\"\n}"
				},
				"url": {
					"raw": "http://{{auth_api_host}}:{{auth_api_port}}/auth/login",
					"protocol": "http",
					"host": [
						"{{auth_api_host}}"
					],
					"port": "{{auth_api_port}}",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete all",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/hidden",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"hidden"
					]
				}
			},
			"response": []
		},
		{
			"name": "add model1 to shopping cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"uuid found\"] = jsonData.uuid;",
							"if(jsonData.uuid){",
							"postman.setEnvironmentVariable(\"order_id\", jsonData.uuid);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r  \"token\": \"{{token}}\",\r  \"data\":{\r    \"category\":\"Order\",\r    \"fields\":{\r      \"status\":\"to_be_approved\",\r      \"subscriber\":\"{{test_user_id}}\",\r      \"sale_date\":1511936480773,\r      \"entries\":[{\"brand\":\"{{brand_1_id}}\",\"model\":\"{{model_1_id}}\",\"exterior\":\"{{exterior_1_id}}\",\"interior\":\"{{interior_1_id}}\",\"style\":\"{{style_1_id}}\",\"price\":90000,\"quantity\":1,\"warehouse\":\"{{warehouse_2_id}}\",\"planned\":{{order_planned_model1_1st}}}]\r    },\r    \"notification\":{\r    \t\"subscribe_role\":[\"contributor\"],\r    \t\"additional\":{\"a\":1,\"b\":true}\r    }\r  }\r}"
				},
				"url": {
					"raw": "http://{{vehicle_api_host}}:{{vehicle_api_port}}/api/orders",
					"protocol": "http",
					"host": [
						"{{vehicle_api_host}}"
					],
					"port": "{{vehicle_api_port}}",
					"path": [
						"api",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "search by source and type",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"data found\"] = (jsonData.rows.length >= 1)"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"filter\":\n  {\n    \"type\":\"Order\",\n    \"source\":\"vehicle\",\n    \"action\":\"CREATE\"\n  },\n   \"page\":1,\n  \"per_page\":10,\n  \"attributes\": [\"new\"]\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "search unread",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e033ba17-c2f7-42f6-972f-f147decddcdd",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"notification found\"] = (jsonData.rows.length >= 1)",
							"postman.setEnvironmentVariable(\"notification_id\", jsonData.rows[0].uuid);",
							"postman.setEnvironmentVariable(\"notification_unread_count\", jsonData.count);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"read\":false,\n  \"filter\":\n  {\n  },\n   \"page\":1,\n  \"per_page\":10,\n  \"attributes\": { \"exclude\": [\"old\",\"new\"] }\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search?original=true",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					],
					"query": [
						{
							"key": "original",
							"value": "true",
							"equals": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update status to read by uuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"update timeline status\"] = responseCode.code == 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"read\":true\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/{{notification_id}}",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"{{notification_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "unread count=count-- after update status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3c3d9cf-fff8-4bcf-8330-e64c4e3a495f",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"notification found\"] = (jsonData.count == environment[\"notification_unread_count\"]-1)",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"read\":false,\n  \"filter\":\n  {\n  },\n   \"page\":1,\n  \"per_page\":2\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "batch update status to read",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"update timeline status\"] = responseCode.code == 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"read\":true\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "add notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d724a5be-d1dc-41cc-8ce6-919d78ccdb94",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"uuid found\"] = jsonData.uuid;",
							"if(jsonData.uuid){",
							"   postman.setEnvironmentVariable(\"notification_id\", jsonData.uuid); ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"action\":\"create\",\n  \"new\":{\"subscriber\":\"{{auth_user_id}}\",\"occurrence_date\":1511936480773},\n  \"type\":\"Order\",\n  \"source\":\"api\",\n  \"additional\":{\"a\":1,\"b\":true}\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications"
					]
				}
			},
			"response": []
		},
		{
			"name": "batch add notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d724a5be-d1dc-41cc-8ce6-919d78ccdb94",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"uuid found\"] = jsonData.uuid;",
							"if(jsonData.uuid){",
							"   postman.setEnvironmentVariable(\"notification_id\", jsonData.uuid); ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{\n\t  \"action\":\"create\",\n\t  \"new\":{\"subscriber\":\"{{auth_user_id}}\",\"occurrence_date\":1511936480773},\n\t  \"type\":\"Order\",\n\t  \"source\":\"api\",\n\t  \"additional\":{\"a\":1,\"b\":true}\n\t},\n\t{\n\t  \"action\":\"create\",\n\t  \"new\":{\"subscriber\":\"{{auth_user_id}}\",\"occurrence_date\":1511936503376},\n\t  \"type\":\"Vehicle\",\n\t  \"source\":\"api\",\n\t  \"additional\":{\"a\":2,\"b\":false}\n\t}\n]\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/batch",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"batch"
					]
				}
			},
			"response": []
		},
		{
			"name": "search by additional",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"data found\"] = (jsonData.rows.length >= 1)"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"filter\":\n  {\n    \"additional.a\": 1\n  },\n   \"page\":1,\n  \"per_page\":10\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "login with test user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d45d963-0d9f-4827-92f3-acdbfddd4a6d",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"token found\"] = jsonData.data.token;",
							"postman.setEnvironmentVariable(\"token\", jsonData.data.token);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\":\"test\",\n  \"password\":\"test\"\n}"
				},
				"url": {
					"raw": "http://{{auth_api_host}}:{{auth_api_port}}/auth/login",
					"protocol": "http",
					"host": [
						"{{auth_api_host}}"
					],
					"port": "{{auth_api_port}}",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "search only subscribed",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bfe4b74-b7ab-4206-9b58-e051e5aa9ff4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"subscribe\":true,\n  \"filter\":\n  {\n  },\n   \"page\":1,\n  \"per_page\":10\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "search by order_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"jsonData = jsonData.data||jsonData;",
							"tests[\"article timeline found\"] = (jsonData.rows.length >= 1)"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"filter\":\n  {\n    \"$or\": [{\"new.uuid\": \"{{order_id}}\"},{\"old.uuid\": \"{{order_id}}\"}]\n    \n  },\n  \"page\":1,\n  \"per_page\":3\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "search by processFlow id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "551f4b51-1520-49ab-aca4-17679a038a71",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"filter\":\n  {\n    \"$or\": [{\"new.uuid\": \"{{incident_flow_1_id}}\"},{\"old.uuid\": \"{{incident_flow_1_id}}\"}]\n    \n  },\n  \"page\":1,\n  \"per_page\":3\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "search by configurationItem id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "76ba5941-2d14-47d0-8211-ac99b0e35067",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"filter\":\n  {\n    \"$or\": [{\"new.uuid\": \"{{router_id}}\"},{\"old.uuid\": \"{{router_id}}\"}]\n    \n  },\n  \"page\":1,\n  \"per_page\":3\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "search moved vehicles",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e597b19-38d0-419c-95a3-d5fcad9c7c9f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n  \"token\":\"{{token}}\",\n  \"filter\":\n  {\n  \t\"source\":\"vehicle\",\n  \t\"action\":\"UPDATE\",\n    \"update.reason\":{\"$eq\": \"warehouse move\"}\n  },\n  \"page\":1,\n  \"per_page\":3\n}\n"
				},
				"url": {
					"raw": "http://{{notifier_api_host}}:{{notifier_api_port}}/api/notifications/search",
					"protocol": "http",
					"host": [
						"{{notifier_api_host}}"
					],
					"port": "{{notifier_api_port}}",
					"path": [
						"api",
						"notifications",
						"search"
					]
				}
			},
			"response": []
		}
	]
}